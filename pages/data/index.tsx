import { ChevronLeft, DataError, Download, Loading } from 'components'
import { compact, toLower, trim, uniq } from 'lodash'
import { Station, Trip } from 'models'
import moment from 'moment'
import Link from 'next/link'
import { useState } from 'react'
import ReactDatePicker from 'react-datepicker'
import {
  Col,
  Container,
  Input,
  ListGroup,
  Row,
  UncontrolledAlert
} from 'reactstrap'
import useSWR from 'swr'

const fetcher = (url: string, after: Date, before: Date) =>
  fetch(`${url}?after=${after}&before=${before}`).then((r) => r.json())

const NoTrips = () => (
  <div className="mt-5">
    <Col className="text-center">
      <h3>No Found Trips</h3>
      <div>No trips were found in this date range.</div>
    </Col>
  </div>
)

const TripItemStation = ({ stations }: { stations?: Station[] }) => (
  <>
    {(stations ?? []).length > 0 && (
      <span>
        {uniq(compact(stations.map(({ harbor }) => trim(harbor)))).join(', ')}
      </span>
    )}
  </>
)

interface TripItemProps {
  trip: Trip
}

const TripItem = ({ trip }: TripItemProps) => (
  <div className="list-group-item text-dark p-2">
    <Row>
      <Col xs="10">
        <div>Trip with {compact(trip.crew).join(', ')}</div>
        <small className="text-muted">
          <TripItemStation stations={trip.stations} />
          &nbsp;on {moment(trip.date).format('MMMM Do, YYYY')}
        </small>
      </Col>
      <Col xs="2" className="d-flex align-items-center">
        <a
          className="btn btn-primary"
          color="primary"
          target="_blank"
          href={`/api/csv/${trip.uuid}`}
        >
          <div className="d-flex align-items-center justify-content-center">
            <Download />
            <span className="ml-2 d-none d-md-inline-block">Download</span>
          </div>
        </a>
      </Col>
    </Row>
  </div>
)

const Disclaimer = () => (
  <UncontrolledAlert color="info">
    <h6>Data Disclaimer</h6>
    <p>
      Data made available on this website are generated by volunteer citizen
      scientists during field sampling. Data are unscreened and come with no
      warranties of any kind concerning completeness, accuracy or reliability.
    </p>
    <h6>Data Use Tips</h6>
    <p>
      The trip data is downloaded as a .CSV file in long format and
      de-normalized; i.e. it contains 12 rows of data for every station and a
      total of 43 columns, one column for each data category collected.
      Performing standard quality assurance and control protocols is recommended
      and downstream processing may be required for certain analyses.
    </p>
  </UncontrolledAlert>
)

const Index = () => {
  const [after, setAfter] = useState(moment().subtract(1, 'year').toDate())
  const [before, setBefore] = useState(moment().add(1, 'day').toDate())
  const [search, setSearch] = useState('')
  const { data: trips, error } = useSWR<Trip[]>(
    ['/api/download', after.toISOString(), before.toISOString()],
    fetcher
  )

  // Filter across a variety of elements
  const filter = (trip: Trip) => {
    const s = toLower(search)
    return (
      trip.crew.filter((c) => toLower(c).includes(s)).length > 0 ||
      trip.stations
        .map(({ harbor }) => toLower(harbor))
        .filter((h) => h.includes(s)).length > 0
    )
  }

  if (error) return <DataError error={error.message} />
  let body
  if (!trips) {
    body = <Loading />
  } else if (trips && trips.length == 0) {
    body = <NoTrips />
  } else {
    body = (
      <ListGroup flush className="px-2 mt-5">
        {trips.filter(filter).map((trip) => (
          <TripItem trip={trip} key={trip.uuid} />
        ))}
      </ListGroup>
    )
  }
  return (
    <>
      <Container>
        <Link href="/">
          <a className="d-flex align-items-center ml-2 py-2">
            <ChevronLeft />
            <span>Back to Home</span>
          </a>
        </Link>
        <Disclaimer />
        <Row noGutters className="justify-content-between p-3">
          <Col xs="12">
            <h3 className="font-weight-light text-center">
              Download Trip Data
            </h3>
          </Col>
        </Row>
        <Row>
          <Col className="d-flex" xs="12" md="6">
            <h4 className="mr-2 mb-0 font-weight-normal">Trip taken After:</h4>
            <ReactDatePicker
              selected={after}
              onChange={(date: Date) => setAfter(date)}
            />
          </Col>
          <Col className="d-flex mt-3 mt-md-0" xs="12" md="6">
            <h4 className="mr-2 mb-0 font-weight-normal">Trip taken Before:</h4>
            <ReactDatePicker
              selected={before}
              onChange={(date: Date) => setBefore(date)}
            />
          </Col>
        </Row>
        <Row className="mt-3">
          <Col xs="12">
            <Input
              type="text"
              id="filter"
              placeholder="Filter trips"
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />
          </Col>
        </Row>
        {body}
      </Container>
    </>
  )
}

export default Index
